/**
 * 
 * @authors yutent (yutent@doui.cc)
 * @date    2016-03-15 16:01:38
 *
 */
"use strict";


class Session {

    constructor(){
        this.data = {}
    }

    createSsid(ssid){
        let ua = Request.headers('user-agent')
        ua = libs.SEC.md5(ua)
        if(!ssid || ssid.slice(-32) !== ua)
            ssid = 'sid:' + libs.SEC.md5(Date.now()).slice(0, 8) + ua

        //客户端有响应时, 即时更新cookie, 以防SESSION过期
        cookie('NODESSID', ssid, {maxAge: dojs.sessionTTL, httpOnly: true})
        this.ssid = ssid
        
        if(!this.data.hasOwnProperty(ssid))
            this.data[ssid] = {}
        //设置session有效期
        this.data[ssid].expire = Date.now() + dojs.session.ttl * 1000
    }

    start(){
        this.createSsid(cookie('NODESSID'))
    }


    //获取session字段值
    get(key){
        return key ? (this.data[this.ssid][key] || null) : this.data[this.ssid]
    }


    //设置session字段值
    set(key, val){
        this.data[this.ssid][key] = val
    }


    //删除单个字段
    unset(key){
        if(this.data[this.ssid].hasOwnProperty(key))
            delete this.data[this.ssid][key]
    }

    //清除个人session
    clear(){
        delete this.data[this.ssid]
    }


}


module.exports = new Session