/**
 * 
 * @authors yutent (yutent@doui.cc)
 * @date    2015-11-23 18:53:53
 *
 */
"use strict";


// 对象合并
Object.defineProperty(Object.prototype,
    'merge',
    {
        value: function(){
            let args = Array.from(arguments)
            if(args.length < 1 || typeof args[0] !== 'object')
                return this
            args.unshift(this)

            Object.assign.apply(null, args)
            return this
        },
        enumerable: false
    })


/**
 * [ 判断对象/数组是否为空]
 * eg.
 * Object.empty(obj/arr)
 */
Object.defineProperty(Object,
    'empty',
    {
        value: function(obj){
            try{
                for(let i in obj){
                    return false
                }
            }catch(e){}
            return true
        },
        enumerable: false
    })


//类似于Array 的splice方法
String.prototype.splice = function(start, len, sub){
    let length = this.length

    if(start < 0){
        if(Math.abs(start) >= length)
            start = 0
        else
            start = length + start
    }

    if(!sub){
        if(len < 1)
            return this

        let strl = this.slice(0, start)
        let strr = this.slice(start + len)

        return strl + strr

    }else{
        if(typeof sub !== 'string' && typeof sub !== 'number')
            return this.splice(start, len)

        if(len < 1){
            len = 0
            if(start === 0)
                return sub + this
        }

        let strl = this.slice(0, start)
        let strr = this.slice(start + len)

        return strl + sub + strr
    }
}

//同php的htmlspecialchars函数
String.prototype.htmlspecialchars = function(sign){
    let str = this.replace(/&(?!\w+;)/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')

    if(sign === 'ENT_QUOTES')
        return str.replace(/"/g, '&quot;').replace(/'/g, '&#39;')
    else if(sign === 'ENT_NOQUOTES')
        return str
    else
        return str.replace(/"/g, '&quot;')
}

//htmlspecialchars的还原
String.prototype.tohtml = function(){
    return this.replace(/&lt;/ig, '<')
                .replace(/&gt;/ig, '>')
                .replace(/&quot;/ig, '"')
                .replace(/&#39;/g, '\'')
                .replace(/&amp;/ig, '&')
}

//获取当天是本年度第几周
Date.prototype.getFullWeek = function() {
    let thisYear = this.getFullYear()
    let _this = new Date(thisYear, 0, 1)
    let firstDay = _this.getDay()
    let numsOfToday = (this - _this) / 86400000
    return Math.ceil((numsOfToday + firstDay) / 7)
}

//获取当天是本月第几周
Date.prototype.getWeek = function() {
    let today = this.getDate()
    let thisMonth = this.getMonth()
    let thisYear = this.getFullYear()
    let firstDay = new Date(thisYear, thisMonth, 1).getDay()
    return Math.ceil((today + firstDay) / 7)
}

//简单的过滤xss
String.prototype.xss = function(){
    let str = this.htmlspecialchars('ENT_QUOTES')
    str = str.replace(/(document\.cookie)|(document\.write)|(\.parentNode)|(window\.location)|(\.innerHTML)/g, '')
        .replace(/(%0[0-8bcef])|(%1[0-9a-f])/g, '')
    return str
}

function isDate(obj){
    return (typeof obj === 'object') && obj.getTime ? true : false
}

global.gmdate = function (format, stamp){
    let oDate
    let arr = [0,0,0,0,0,0,0]
        
    format = format || 'Y-m-d H:i:s'
        
    if(!stamp || arguments.length < 2){
        oDate = new Date
    }else if(!isDate(stamp)){
        if(typeof stamp === 'object')
            return

        if(!/^[\d]+$/.test(stamp)){
            oDate = new Date(0);
            stamp = stamp.replace(/[^\d\/\-\s\:]/g, '')
            let temp = stamp.split(/[\s]+/)
            let year_arr = temp[0] && temp[0].split(/[\/\-]/) || [0]
            let hour_arr = temp[1] && temp[1].split(/[:]/) || [0]

            year_arr[1] && year_arr[1]--; //月份是从0开始的，所以要减1
            year_arr.forEach(function(item, i){
                arr[i] = item
            })
            hour_arr.forEach(function(item, i){
                arr[i+3] = item
            })
            oDate.setFullYear.apply(oDate, arr.slice(0, 3))
            oDate.setHours.apply(oDate, arr.slice(3))
        }else{
            stamp = Number(stamp)
            oDate = new Date(stamp)
        }
    }else{
        oDate = stamp
    }

    let week = ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']
    let dd = {
            'fullyear': oDate.getFullYear(),
            'year': oDate.getYear(),
            'fullweek': oDate.getFullWeek(),
            'week': oDate.getWeek(),
            'month': oDate.getMonth() + 1,
            'date': oDate.getDate(),
            'day': week[oDate.getDay()],
            'hours': oDate.getHours(),
            'minutes': oDate.getMinutes(),
            'seconds': oDate.getSeconds()
        }

    dd.g = dd.hours > 12 ? dd.hours - 12 : dd.hours
    
    let oType = {
        'Y': dd.fullyear,
        'y': dd.year,
        'm': dd.month < 10 ?  '0' + dd.month : dd.month,
        'n': dd.month,
        'd': dd.date < 10 ? '0' + dd.date : dd.date,
        'j': dd.date,
        'H': dd.hours < 10 ? '0' + dd.hours : dd.hours,
        'h': dd.g < 10 ? '0' + dd.g : dd.g,
        'G': dd.hours,
        'g': dd.g,
        'i': dd.minutes < 10 ? '0' + dd.minutes : dd.minutes,
        's': dd.seconds < 10 ? '0' + dd.seconds : dd.seconds,
        'W': dd.fullweek,
        'w': dd.week,
        'D': dd.day
    }

    for(let i in oType){
        format = format.replace(i, oType[i]);
    }
    
    return format;
}

global.empty = function(o){
    if(o === undefined || o === null || o === '' || !o || o == 0){
        return true
    }else if(typeof o === 'object'){
        try{
            return Object.empty(o)
        }catch(e){}
        return false
    }
    return false
}
