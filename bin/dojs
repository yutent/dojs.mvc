#!/bin/bash


os=unknow

if [ $(uname -s | grep Linux | wc -l) -eq 1 ]; then
    os=linux
elif [ $(uname -s | grep Darwin | wc -l) -eq 1 ]; then
    os=macos
fi

if [ "$os" = "unknow" ]; then
    echo "无法识别你的操作系统，请自行修改app-demo.yaml配置，并用pm2管理应用"
    exit 3;
fi

if [ $(echo "$PWD" | grep bin$ | wc -l) -eq 0 ]; then
    cd bin
fi

cpus=1
if [ "$os" = "linux" ]; then
    cpus=$(cat /proc/cpuinfo | grep processor | wc -l)
elif [ "$os" = "macos" ]; then
    cpus=$(sysctl -n hw.ncpu)
fi


if [ "$(which pm2)" = "" ]; then
    echo "请先安装pm2, 可使用以下命令：(sudo npm i pm2 -g)"
    exit 1;
fi

pm2Ver=$(pm2 -v)
if [ $(echo "$pm2Ver 2.0.0" | tr " " "\n" | sort -n | head -1) = "$pm2Ver" ]; then
    echo "要求pm2的版本至少在2.0.0"
    echo "系统当前pm2的版本为: $pm2Ver"
    echo "可使用以下命令进行升级: sudo npm i pm2 -g && pm2 update"
    exit 1
fi

do_start() {
    if [ ! -e app.yaml ]; then
        echo "首次运行，请根据提示完成配置"
        read -p "(请输入应用唯一名称, 不能含中文): " name

        if [ "$name" = "" ]; then
            echo "没有输入, 自动使用默认名称"
            name=dojs-demo-app;
        fi

        echo "当前应用名称为: $name"

        read -p "(是否开启集群模式, 建议开启, y/n): " cluster

        if [ "$name" = "" ]; then
            echo "没有输入, 自动开启集群模式"
            cluster=cluster
        else
            if [ "$cluster" = "n" ]; then
                cluster=fork
            else
                cluster=cluster
            fi
        fi

        echo "当前运行模式为: $cluster"

        if [ "$cluster" = "cluster" ]; then
            read -p "(请设置开启的线程数: 0-$cpus, 0为自动): " instances

            if [[ "$instances" = "0" || "$instances" = "" ]]; then
                instances=max
            fi
        else
            instances=1
        fi

        echo "配置完成, 即将为你安装依赖的模块..."

        cat <<EOF > app.yaml
script: app.js
cwd: ../
watch: true
name: $name
ignore_watch: [bin, data, public, package.json, node_modules, .git, .gitignore]
exec_mode: $cluster
instances: $instances
node_args: --harmony
error_file: $PWD/logs/error.log
out_file: $PWD/logs/out.log
merge_logs: true
min_uptime: 60s
max_memory_restart: 300M
EOF

        cd ..;
        npm i --save;
        echo "模块安装完成，程序即将启动..."
        cd bin;
    fi

    pm2 start app.yaml;
    echo "应用成功启动, 打开浏览器体验一下吧."
    touch lock
}

do_stop() {
    if [ ! -e lock ]; then
        echo "应用没有在运行..."
        return;
    fi

    read -p "(你确定要停止应用吗? y/n): " confirm

    if [ "$confirm" != "y" ]; then
        exit 1;
    fi
    echo "1s之后停止应用..."
    sleep 1
    pm2 stop app.yaml
    rm lock
    echo "应用已经停止."
}

do_restart() {

    read -p "(你确定要重启应用吗? y/n): " confirm

    if [ "$confirm" != "y" ]; then
        exit 1;
    fi

    echo "1s之后重启应用..."
    sleep 1

    if [ -e lock ]; then
        pm2 stop app.yaml
    fi
    do_start
}

do_del() {
    read -p "(你确定要删除应用吗? y/n): " confirm

    if [ "$confirm" != "y" ]; then
        exit 1;
    fi

    echo "1s之后删除应用..."
    sleep 1

    pm2 delete app.yaml
    rm lock
}


case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    status)
        pm2 list
        ;;
    restart)
        do_restart
        ;;
    delete)
        do_del
        ;;
    *)
        echo "使用以下指令: ./bin/dojs {start|stop|status|restart|delete}" >&2
        exit 3
        ;;
esac